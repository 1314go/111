{"version":3,"file":"js/app.c8c95deb.js","mappings":"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","sources":["webpack://city/./src/App.vue","webpack://city/./src/App.vue?7ccd","webpack://city/./src/api/api.js","webpack://city/./src/utils/eventHub.js","webpack://city/./src/components/BigScreen.vue","webpack://city/./src/components/BigScreen.vue?0fb0","webpack://city/./src/three/gui.js","webpack://city/./src/three/scene.js","webpack://city/./src/three/camera.js","webpack://city/./src/three/renderer.js","webpack://city/./src/three/controls.js","webpack://city/./src/three/axesHelper.js","webpack://city/./src/three/init.js","webpack://city/./src/three/modify/modifyCityMaterial.js","webpack://city/./src/three/mesh/FlyLineShader.js","webpack://city/./src/three/mesh/MeshLine.js","webpack://city/./src/three/mesh/LightWall.js","webpack://city/./src/three/mesh/LightRadar.js","webpack://city/./src/three/mesh/AlarmSprite.js","webpack://city/./src/three/mesh/Clouds.js","webpack://city/./src/three/mesh/Ocean.js","webpack://city/./src/three/mesh/caodi.js","webpack://city/./src/three/mesh/City.js","webpack://city/./src/three/createMesh.js","webpack://city/./src/three/animate.js","webpack://city/./src/three/mesh/sky.js","webpack://city/./src/components/Scene.vue","webpack://city/./src/components/Scene.vue?7f7a","webpack://city/./src/views/HomeView.vue","webpack://city/./src/views/HomeView.vue?1da1","webpack://city/./src/router/index.js","webpack://city/./src/store/index.js","webpack://city/./src/main.js","webpack://city/./src/shader/flyLine/fragment.glsl","webpack://city/./src/shader/flyLine/vertex.glsl","webpack://city/./src/shader/lightRadar/fragment.glsl","webpack://city/./src/shader/lightRadar/vertex.glsl","webpack://city/./src/shader/lightWall/fragment.glsl","webpack://city/./src/shader/lightWall/vertex.glsl","webpack://city/webpack/bootstrap","webpack://city/webpack/runtime/chunk loaded","webpack://city/webpack/runtime/compat get default export","webpack://city/webpack/runtime/define property getters","webpack://city/webpack/runtime/global","webpack://city/webpack/runtime/hasOwnProperty shorthand","webpack://city/webpack/runtime/make namespace object","webpack://city/webpack/runtime/publicPath","webpack://city/webpack/runtime/jsonp chunk loading","webpack://city/webpack/startup"],"sourcesContent":["<template>\n  <router-view/>\n</template>\n\n<style lang=\"less\">\n*{\n  margin: 0;\n  padding: 0;\n}\n</style>","import { render } from \"./App.vue?vue&type=template&id=368edf51\"\nconst script = {}\n\nimport \"./App.vue?vue&type=style&index=0&id=368edf51&lang=less\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import axios from \"axios\";\n\nexport function getSmartCityInfo() {\n  return axios.get(\"https://apifoxmock.com/m1/5207153-4873334-default/api/smartcity/info\");\n}\nexport function getSmartCityList(){\n  return axios.get(\"https://apifoxmock.com/m1/5207153-4873334-default/api/smartcity/list\");\n}","import Mitt from \"mitt\";\nconst eventHub = Mitt();\nexport default eventHub;","<template>\n  <div id=\"bigScreen\">\n    <div class=\"header\">智慧城市管理平台</div>\n    <div class=\"main\">\n      <div class=\"left\">\n        <div class=\"cityEvent\" v-for=\"(item,key) in props.dataInfo\">\n          <h3>\n            <span>{{item.name}}</span>\n          </h3>\n          <h1>\n            <img src=\"../assets/bg/bar.svg\" class=\"icon\"/>\n            <span>{{toFixInt(item.number)}}({{item.unit}})</span>\n          </h1>\n          <div class=\"footerBoder\"></div>\n        </div>\n      </div>\n      <div class=\"right\">\n        <div class=\"cityEvent list\">\n            <h3>\n              <span>事件列表</span>\n            </h3>\n            <ul>\n              <li\n              v-for=\"(item, i) in props.eventList  \" :class=\"{active: currentActive === i}\" @click=\"toggleEvent( i)\">\n                <h1>\n                  <div>\n                    <img :src=\"imgs[item.name]\" class=\"icon\" />\n                    <span>{{item.name}}</span>\n                  </div>\n                  <span class=\"time\">{{item.time}}</span>\n                </h1>\n                <p>{{item.type}}</p>\n              </li>\n            </ul>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport eventHub from \"@/utils/eventHub\";\nimport { ref } from \"vue\";\n\nconst props = defineProps([\"dataInfo\", \"eventList\"]);\nconst imgs = {\n  \"电力\": require(\"@/assets/bg/dianli.svg\"),\n  \"火警\": require(\"@/assets/bg/fire.svg\"),\n  \"治安\": require(\"@/assets/bg/jingcha.svg\"),\n};\nconst toFixInt = (num) => {\n  if (typeof num === 'number') {\n    return parseInt(num.toFixed(0));\n  } else {\n    // 处理 num 不是数字的情况\n    return 0; // 或者其他默认值\n  }\n};\nconst currentActive = ref(null);\n\neventHub.on(\"spriteClik\",(data)=>{\n  console.log(\"data\");\n  currentActive.value = data.i;\n});\nconst toggleEvent = (i) => {\n  currentActive.value = i;\n  eventHub.emit(\"toggleEvent\", i);\n};\n</script>\n\n<style scoped>\n#bigScreen {\n  width: 100vw;\n  height: 100vh;\n  position: fixed;\n  z-index: 100;\n\n  left: 0;\n  top: 0;\n  pointer-events: none;\n  display: flex;\n  flex-direction: column;\n}\n\n.header {\n  /* width: 1920px;\n        height: 100px; */\n\n  width: 19.2rem;\n  height: 1rem;\n  background-image: url(@/assets/bg/title.png);\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n  text-align: center;\n  color: rgb(226, 226, 255);\n  font-size: 0.4rem;\n}\n\n.main {\n  flex: 1;\n  width: 19.2rem;\n  display: flex;\n  justify-content: space-between;\n}\n\n.left {\n  width: 4rem;\n  /* background-color: rgb(255,255,255,0.5); */\n  background-image: url(@/assets/bg/line_img.png);\n  background-repeat: no-repeat;\n  background-size: contain;\n  background-position: right center;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 0.4rem 0;\n}\n\n.right {\n  width: 4rem;\n  /* background-color: rgb(255,255,255,0.5); */\n  background-image: url(@/assets/bg/line_img.png);\n  background-repeat: no-repeat;\n  background-size: contain;\n  background-position: left center;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 0.4rem 0;\n}\n\n.cityEvent {\n  position: relative;\n  width: 3.5rem;\n  /* height: 3rem; */\n  margin-bottom: 0.5rem;\n  background-image: url(@/assets/bg/bg_img03.png);\n  background-repeat: repeat;\n}\n\n.cityEvent::before {\n  width: 0.4rem;\n  height: 0.4rem;\n  position: absolute;\n  left: 0;\n  top: 0;\n  border-top: 4px solid rgb(34, 133, 247);\n  border-left: 4px solid rgb(34, 133, 247);\n  content: \"\";\n  display: block;\n}\n\n.cityEvent::after {\n  width: 0.4rem;\n  height: 0.4rem;\n  position: absolute;\n  right: 0;\n  top: 0;\n  border-top: 4px solid rgb(34, 133, 247);\n  border-right: 4px solid rgb(34, 133, 247);\n  content: \"\";\n  display: block;\n}\n.footerBorder {\n  position: absolute;\n  bottom: 0;\n  bottom: 0;\n  width: 3.5rem;\n  height: 0.4rem;\n}\n.footerBorder::before {\n  width: 0.4rem;\n  height: 0.4rem;\n  position: absolute;\n  left: 0;\n  top: 0;\n  border-bottom: 4px solid rgb(34, 133, 247);\n  border-left: 4px solid rgb(34, 133, 247);\n  content: \"\";\n  display: block;\n}\n\n.footerBorder::after {\n  width: 0.4rem;\n  height: 0.4rem;\n  position: absolute;\n  right: 0;\n  top: 0;\n  border-bottom: 4px solid rgb(34, 133, 247);\n  border-right: 4px solid rgb(34, 133, 247);\n  content: \"\";\n  display: block;\n}\n\n.icon {\n  width: 40px;\n  height: 40px;\n}\n\nh1 {\n  color: #fff;\n  display: flex;\n  align-items: center;\n  padding: 0 0.3rem 0.3rem;\n  justify-content: space-between;\n  font-size: 0.3rem;\n}\nh3 {\n  color: #fff;\n  display: flex;\n  align-items: center;\n  padding: 0.3rem 0.3rem;\n}\n\nh1 > div {\n  display: flex;\n  align-items: center;\n}\nh1 span.time {\n  font-size: 0.2rem;\n  font-weight: normal;\n}\n\n.cityEvent li > p {\n  color: #eee;\n  padding: 0rem 0.3rem 0.3rem;\n}\n.list h1 {\n  padding: 0.1rem 0.3rem;\n}\n.cityEvent.list ul {\n  pointer-events: auto;\n  cursor: pointer;\n}\n\n.cityEvent li.active h1 {\n  color: red;\n}\n.cityEvent li.active p {\n  color: red;\n}\n\nul,\nli {\n  list-style: none;\n}\n</style>\n","import script from \"./BigScreen.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./BigScreen.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./BigScreen.vue?vue&type=style&index=0&id=0ea81fa8&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-0ea81fa8\"]])\n\nexport default __exports__","import * as dat from \"dat.gui\";\n//创建gui对象\nconst gui = new dat.GUI();\n\nexport default gui;\n","import * as THREE from \"three\";\nimport { RGBELoader } from \"three/examples/jsm/loaders/RGBELoader\";\nimport Ocean from \"./mesh/Ocean\";\n// 初始化场景\nconst scene = new THREE.Scene();\n\n// // 场景天空盒\n// const textureCubeLoader = new THREE.CubeTextureLoader().setPath(\"./textures/\");\n// const textureCube = textureCubeLoader.load([\n//   \"1.jpg\",\n//   \"2.jpg\",\n//   \"3.jpg\",\n//   \"4.jpg\",\n//   \"5.jpg\",\n//   \"6.jpg\",\n// ]);\n\n// scene.background = textureCube;\n// scene.environment = textureCube;\n\n// let rgbeLoader = new RGBELoader();\n// rgbeLoader.load(\"./texture/kloppenheim_02_4k.hdr\", (envMap) => {\n//   // 设置球形贴图\n//   // envMap.mapping = THREE.EquirectangularReflectionMapping;\n//   envMap.mapping = THREE.EquirectangularRefractionMapping;\n//   // 设置环境贴图\n//   scene.background = envMap;\n//   // 设置环境贴图\n//   scene.environment = envMap;\n\n\n  \n// });\n\n\nexport default scene;\n","import * as THREE from \"three\";\n// 创建透视相机\nconst camera = new THREE.PerspectiveCamera(\n  75,\n  window.innerHeight / window.innerHeight,\n  1,\n  50000\n);\n// 设置相机位置\n// object3d具有position，属性是1个3维的向量\ncamera.position.set(5, 10, 15);\n\nexport default camera;\n","import * as THREE from \"three\";\n\n// 初始化渲染器\nconst renderer = new THREE.WebGLRenderer({\n  // 抗锯齿\n  antialias: true,\n  // logarithmicDepthBuffer: true,\n});\n// 设置渲染尺寸大小\nrenderer.setSize(window.innerWidth, window.innerHeight);\nrenderer.shadowMap.enabled = true;\nexport default renderer;\n","import { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport camera from \"./camera\";\nimport renderer from \"./renderer\";\n\n// 初始化控制器\nconst controls = new OrbitControls(camera, renderer.domElement);\n// 设置控制器阻尼\ncontrols.enableDamping = true;\n// 设置自动旋转\n// controls.autoRotate = true;\n\nexport default controls;\n","import * as THREE from \"three\";\n// 加入辅助轴，帮助我们查看3维坐标轴\nconst axesHelper = new THREE.AxesHelper(5);\n\nexport default axesHelper;\n","import camera from \"./camera\";\nimport renderer from \"./renderer\";\n\n// 更新摄像头\ncamera.aspect = window.innerWidth / window.innerHeight;\n//   更新摄像机的投影矩阵\ncamera.updateProjectionMatrix();\n\n// 监听屏幕大小改变的变化，设置渲染的尺寸\nwindow.addEventListener(\"resize\", () => {\n  //   console.log(\"resize\");\n  // 更新摄像头\n  camera.aspect = window.innerWidth / window.innerHeight;\n  //   更新摄像机的投影矩阵\n  camera.updateProjectionMatrix();\n\n  //   更新渲染器\n  renderer.setSize(window.innerWidth, window.innerHeight);\n  //   设置渲染器的像素比例\n  renderer.setPixelRatio(window.devicePixelRatio);\n});\n","import * as THREE from \"three\";\nimport gsap from \"gsap\";\nexport default function modifyCityMaterial(mesh) {\n  mesh.material.onBeforeCompile = (shader) => {\n    // console.log(shader.vertexShader);\n    // console.log(shader.fragmentShader);\n    shader.fragmentShader = shader.fragmentShader.replace(\n      \"#include <dithering_fragment>\",\n      `\n        #include <dithering_fragment>\n        //#end#\n    `\n    );\n    addGradColor(shader, mesh);\n    addSpread(shader);\n    addLightLine(shader);\n    addToTopLine(shader);\n  };\n}\n\nexport function addGradColor(shader, mesh) {\n  mesh.geometry.computeBoundingBox();\n  //   console.log(mesh.geometry.boundingBox);\n\n  let { min, max } = mesh.geometry.boundingBox;\n  //   获取物体的高度差\n  let uHeight = max.y - min.y;\n\n  shader.uniforms.uTopColor = {\n    value: new THREE.Color(\"#aaaeff\"),\n  };\n  shader.uniforms.uHeight = {\n    value: uHeight,\n  };\n\n  shader.vertexShader = shader.vertexShader.replace(\n    \"#include <common>\",\n    `\n      #include <common>\n      varying vec3 vPosition;\n      `\n  );\n\n  shader.vertexShader = shader.vertexShader.replace(\n    \"#include <begin_vertex>\",\n    `\n      #include <begin_vertex>\n      vPosition = position;\n  `\n  );\n\n  shader.fragmentShader = shader.fragmentShader.replace(\n    \"#include <common>\",\n    `\n      #include <common>\n      \n      uniform vec3 uTopColor;\n      uniform float uHeight;\n      varying vec3 vPosition;\n\n        `\n  );\n  shader.fragmentShader = shader.fragmentShader.replace(\n    \"//#end#\",\n    `\n      \n      vec4 distGradColor = gl_FragColor;\n\n      // 设置混合的百分比\n      float gradMix = (vPosition.y+uHeight/2.0)/uHeight;\n      // 计算出混合颜色\n      vec3 gradMixColor = mix(distGradColor.xyz,uTopColor,gradMix);\n      gl_FragColor = vec4(gradMixColor,1);\n        //#end#\n\n      `\n  );\n}\n\nexport function addSpread(shader, center = new THREE.Vector2(0, 0)) {\n  // 设置扩散的中心点\n  shader.uniforms.uSpreadCenter = { value: center };\n  //   扩散的时间\n  shader.uniforms.uSpreadTime = { value: -2000 };\n  //   设置条带的宽度\n  shader.uniforms.uSpreadWidth = { value: 60 };\n\n  shader.fragmentShader = shader.fragmentShader.replace(\n    \"#include <common>\",\n    `\n      #include <common>\n\n      uniform vec2 uSpreadCenter;\n      uniform float uSpreadTime;\n      uniform float uSpreadWidth;\n      `\n  );\n\n  shader.fragmentShader = shader.fragmentShader.replace(\n    \"//#end#\",\n    `\n     float spreadRadius = distance(vPosition.xz,uSpreadCenter);\n    //  扩散范围的函数\n    float spreadIndex = -(spreadRadius-uSpreadTime)*(spreadRadius-uSpreadTime)+uSpreadWidth;\n\n    if(spreadIndex>0.0){\n        gl_FragColor = mix(gl_FragColor,vec4(1,1,1,1),spreadIndex/uSpreadWidth);\n    }\n\n    //#end#\n    `\n  );\n\n  gsap.to(shader.uniforms.uSpreadTime, {\n    value: 800,\n    duration: 3,\n    ease: \"none\",\n    repeat: -1,\n  });\n}\n\nexport function addLightLine(shader) {\n  //   扩散的时间\n  shader.uniforms.uLightLineTime = { value: -1500 };\n  //   设置条带的宽度\n  shader.uniforms.uLightLineWidth = { value: 200 };\n\n  shader.fragmentShader = shader.fragmentShader.replace(\n    \"#include <common>\",\n    `\n        #include <common>\n  \n        \n        uniform float uLightLineTime;\n        uniform float uLightLineWidth;\n        `\n  );\n\n  shader.fragmentShader = shader.fragmentShader.replace(\n    \"//#end#\",\n    `\n      float LightLineMix = -(vPosition.x-uLightLineTime)*(vPosition.x-uLightLineTime)+uLightLineWidth;\n  \n      if(LightLineMix>0.0){\n          gl_FragColor = mix(gl_FragColor,vec4(0.8,1.0,1.0,1),LightLineMix /uLightLineWidth);\n          \n      }\n  \n      //#end#\n      `\n  );\n\n  gsap.to(shader.uniforms.uLightLineTime, {\n    value: 1500,\n    duration: 5,\n    ease: \"none\",\n    repeat: -1,\n  });\n}\n\nexport function addToTopLine(shader) {\n  //   扩散的时间\n  shader.uniforms.uToTopTime = { value: 0 };\n  //   设置条带的宽度\n  shader.uniforms.uToTopWidth = { value: 40 };\n\n  shader.fragmentShader = shader.fragmentShader.replace(\n    \"#include <common>\",\n    `\n          #include <common>\n    \n          \n          uniform float uToTopTime;\n          uniform float uToTopWidth;\n          `\n  );\n\n  shader.fragmentShader = shader.fragmentShader.replace(\n    \"//#end#\",\n    `\n        float ToTopMix = -(vPosition.y-uToTopTime)*(vPosition.y-uToTopTime)+uToTopWidth;\n    \n        if(ToTopMix>0.0){\n            gl_FragColor = mix(gl_FragColor,vec4(0.8,0.8,1,1),ToTopMix /uToTopWidth);\n            \n        }\n    \n        //#end#\n        `\n  );\n\n  gsap.to(shader.uniforms.uToTopTime, {\n    value: 500,\n    duration: 3,\n    ease: \"none\",\n    repeat: -1,\n  });\n}\n","import * as THREE from \"three\";\nimport gsap from \"gsap\";\nimport vertex from \"@/shader/flyLine/vertex.glsl\";\nimport fragment from \"@/shader/flyLine/fragment.glsl\";\n\nexport default class FlyLineShader {\n\n  constructor(position={x:0,z:0},Color=0xff0000){\n    let FlyLinePoints=[\n      new THREE.Vector3(0,0,0),\n      new THREE.Vector3(position.x/2,4,position.z/2),\n      new THREE.Vector3(position.x,0,position.z),\n    ];\n    //创建曲线\n    this.lineCurve=new THREE.CatmullRomCurve3(FlyLinePoints);\n    const points = this.lineCurve.getPoints(1000);\n    //创建集合顶点\n    this.geometry=new THREE.BufferGeometry().setFromPoints(points);\n    //给每一个顶点设置属性\n    const aSizeArray = new Float32Array(points.length);\n    for(let i=0;i<aSizeArray.length;i++){\n      aSizeArray[i]=i;\n    }\n    this.geometry.setAttribute(\"aSize\",new THREE.BufferAttribute(aSizeArray,1));\n   \n\n    //设置着色器材质\n    this.shaderMaterial=new THREE.ShaderMaterial({\n      vertexShader:vertex,\n      fragmentShader:fragment,\n      transparent:true,\n      blending:THREE.AdditiveBlending,\n      uniforms:{\n        uTime:{\n          value:0\n        },\n        uColor:{\n          value:new THREE.Color(Color)\n        },\n        uLength:{\n          value:points.length,\n        },\n        uSize:{\n          value:0.01\n        }\n      }\n    });\n\n    this.mesh=new THREE.Points(this.geometry,this.shaderMaterial);\n    gsap.to(this.shaderMaterial.uniforms.uTime,{\n      value:1000,\n      duration:1,\n      repeat:-1,\n      ease:\"none\"\n    });\n  }\n  remove() {\n    this.mesh.remove();\n    this.mesh.removeFromParent();\n    this.mesh.geometry.dispose();\n    this.mesh.material.dispose();\n  }\n}","import * as THREE from \"three\";\nexport default class MeshLine {\n  constructor(geometry){\n    const edges = new THREE.EdgesGeometry(geometry);\n    \n    this.material = new THREE.LineBasicMaterial({color:0xffffff});\n\n    const line = new THREE.LineSegments(edges,this.material);\n\n    this.geometry = edges;\n    this.mesh = line;\n\n  }\n\n}","import * as THREE from \"three\";\nimport gsap from \"gsap\";\nimport vertex from \"@/shader/lightWall/vertex.glsl\";\nimport fragment from \"@/shader/lightWall/fragment.glsl\";\n\nexport default class LightWall {\n  constructor(\n    radius = 5,\n    length = 2,\n    position = { x: 0, z: 0 },\n    color = 0xff0000\n  ) {\n    this.geometry = new THREE.CylinderGeometry(\n      radius,\n      radius,\n      2,\n      32,\n      1,\n      true\n    );\n    this.material = new THREE.ShaderMaterial({\n      vertexShader: vertex,\n      fragmentShader: fragment,\n      transparent: true,\n      side: THREE.DoubleSide,\n    });\n\n    this.mesh = new THREE.Mesh(this.geometry, this.material);\n    this.mesh.position.set(position.x, 1, position.z);\n    this.mesh.geometry.computeBoundingBox();\n    //   console.log(mesh.geometry.boundingBox);\n\n    let { min, max } = this.mesh.geometry.boundingBox;\n    //   获取物体的高度差\n    let uHeight = max.y - min.y;\n    this.material.uniforms.uHeight = {\n      value: uHeight,\n    };\n\n    // 光墙动画\n    gsap.to(this.mesh.scale, {\n      x: length,\n      z: length,\n      duration: 1,\n      repeat: -1,\n      yoyo: true,\n    });\n  }\n\n  remove() {\n    this.mesh.remove();\n    this.mesh.removeFromParent();\n    this.mesh.geometry.dispose();\n    this.mesh.material.dispose();\n  }\n}\n","import * as THREE from \"three\";\nimport gsap from \"gsap\";\nimport vertex from \"@/shader/lightRadar/vertex.glsl\";\nimport fragment from \"@/shader/lightRadar/fragment.glsl\";\n\nexport default class LightRadar {\n  constructor(radius = 2, position = { x: 0, z: 0 }, color = 0xff0000) {\n    this.geometry = new THREE.PlaneGeometry(radius, radius);\n    this.material = new THREE.ShaderMaterial({\n      uniforms: {\n        uColor: { value: new THREE.Color(color) },\n        uTime: {\n          value: 0,\n        },\n      },\n      vertexShader: vertex,\n      fragmentShader: fragment,\n      transparent: true,\n      side: THREE.DoubleSide,\n    });\n\n    this.mesh = new THREE.Mesh(this.geometry, this.material);\n    this.mesh.position.set(position.x, 1, position.z);\n    this.mesh.rotation.x = -Math.PI / 2;\n\n    gsap.to(this.material.uniforms.uTime, {\n      value: 1,\n      duration: 1,\n      repeat: -1,\n      ease: \"none\",\n    });\n  }\n\n  remove() {\n    this.mesh.remove();\n    this.mesh.removeFromParent();\n    this.mesh.geometry.dispose();\n    this.mesh.material.dispose();\n  }\n}\n","import * as THREE from \"three\"; \nimport camera from \"../camera\";\nexport default class AlarmSprite{\n  constructor(type=\"火警\",position={x:-1.8,z:3},color=0xff0000){\n    const TextureLoader = new THREE.TextureLoader();\n\n    const typeObj ={\n      \"火警\":\"./textures/tag/fire.png\",\n      \"安全\":\"./textures/tag/safe.png\",\n      \"电力\":\"./textures/tag/e.png\",\n      \"治安\":\"./textures/tag/jingcha.png\"\n\n    \n    }\n\n    const map = TextureLoader.load( typeObj[type]);\n    this.material = new THREE.SpriteMaterial( { map: map,color: 0xff0000 ,\n    transparent: true,\n    } );\n\n    this.mesh = new THREE.Sprite( this.material );\n   \n    this.mesh.position.set(position.x,2.5,position.z);\n\n    //封装点击事件，经过投射光线检测获取点击对象\n    this.fns=[];\n    //创建射线\n    \n    this.raycaster = new THREE.Raycaster();\n    this.mouse = new THREE.Vector2();\n    window.addEventListener('click',(event)=>{\n      this.mouse.x = (event.clientX / window.innerWidth) * 2 - 1;\n      this.mouse.y = -((event.clientY / window.innerHeight) * 2 - 1);\n     \n      this.raycaster.setFromCamera(this.mouse, camera);\n      event.mesh = this.mesh;\n      event.alarm=this;\n      const intersects = this.raycaster.intersectObject(  this.mesh  );\n      if(intersects.length>0){\n      this.fns.forEach((fn)=>{\n        fn(event);\n      });\n    }\n})\n  }\n  onClick(fn){\n    this.fns.push(fn);\n\n  }\n  remove() {\n    this.mesh.remove();\n    this.mesh.removeFromParent();\n    this.mesh.geometry.dispose();\n    this.mesh.material.dispose();\n  }\n}","\nimport * as THREE from \"three\";\nimport gsap from \"gsap\";\n\n// 第一种实现方式\nexport class Clouds {\n  // height设置云朵的高度，num设置云朵的数量\n  constructor(\n    height = 10,\n    num = 300,\n    size = 15,\n    scale = 10,\n    autoRotate = true\n  ) {\n    let textureLoader = new THREE.TextureLoader();\n    const map1 = textureLoader.load(\"./textures/cloud/cloud1.jfif\");\n    const map2 = textureLoader.load(\"./textures/cloud/cloud2.jfif\");\n    const map3 = textureLoader.load(\"./textures/cloud/cloud3.jpg\");\n\n    let material1 = new THREE.SpriteMaterial({\n      map: map2,\n      color: 0xffffff,\n      alphaMap: map1,\n      transparent: true,\n      blending: THREE.AdditiveBlending,\n      depthWrite: false,\n      depthTest: false,\n    });\n    let material2 = new THREE.SpriteMaterial({\n      map: map3,\n      color: 0xffffff,\n      alphaMap: map2,\n      transparent: true,\n      blending: THREE.AdditiveBlending,\n      depthWrite: false,\n      depthTest: false,\n    });\n    let material3 = new THREE.SpriteMaterial({\n      map: map1,\n      color: 0xffffff,\n      alphaMap: map3,\n      transparent: true,\n      blending: THREE.AdditiveBlending,\n      depthWrite: false,\n      depthTest: false,\n    });\n\n    this.materials = [material1, material2, material3];\n    this.mesh = new THREE.Group();\n    for (let i = 0; i < num; i++) {\n      let index = Math.floor(Math.random() * 3);\n      let material = this.materials[index];\n      let sprite = new THREE.Sprite(material);\n      // 随机设置精灵的大小\n      let randomSize = Math.random() * size;\n      sprite.scale.set(randomSize, randomSize, randomSize);\n      // 随机设置精灵的位置\n      let randomX = (Math.random() - 0.5) * 2 * scale;\n      let randomY = Math.random() * (height / 2) + height;\n      let randomZ = (Math.random() - 0.5) * 2 * scale;\n      sprite.position.set(randomX, randomY, randomZ);\n      this.mesh.add(sprite);\n    }\n    if (autoRotate) {\n      this.animate();\n    }\n  }\n  animate() {\n    gsap.to(this.mesh.rotation, {\n      duration: 120,\n      repeat: -1,\n      y: Math.PI * 2,\n    });\n  }\n}\n\nexport class CloudsPlus {\n  // height设置云朵的高度，num设置云朵的数量\n  constructor(\n    height = 20,\n    num = 100,\n    size = 400,\n    scale = 100,\n    autoRotate = true\n  ) {\n    this.height = height;\n    this.num = num;\n    this.size = size;\n    this.scale = scale;\n    this.autoRotate = autoRotate;\n    let textureLoader = new THREE.TextureLoader();\n    const map1 = textureLoader.load(\"./textures/cloud/cloud1.jfif\");\n    const map2 = textureLoader.load(\"./textures/cloud/cloud2.jfif\");\n    const map3 = textureLoader.load(\"./textures/cloud/cloud3.jpg\");\n\n    let materials = [];\n\n    let material1 = new THREE.PointsMaterial({\n      map: map1,\n      color: 0xffffff,\n      alphaMap: map2,\n      transparent: true,\n      blending: THREE.AdditiveBlending,\n      depthWrite: false,\n      depthTest: false,\n      size: 0.2 * size,\n    });\n    let material2 = new THREE.PointsMaterial({\n      map: map2,\n      color: 0xffffff,\n      alphaMap: map3,\n      transparent: true,\n      blending: THREE.AdditiveBlending,\n      depthWrite: false,\n      depthTest: false,\n      size: 0.5 * size,\n    });\n    let material3 = new THREE.PointsMaterial({\n      map: map3,\n      color: 0xffffff,\n      alphaMap: map1,\n      transparent: true,\n      blending: THREE.AdditiveBlending,\n      depthWrite: false,\n      depthTest: false,\n      size: 0.8 * size,\n    });\n    let material4 = new THREE.PointsMaterial({\n      map: map2,\n      color: 0xffffff,\n      alphaMap: map1,\n      transparent: true,\n      blending: THREE.AdditiveBlending,\n      depthWrite: false,\n      depthTest: false,\n      size: 1 * size,\n    });\n    materials.push(material1, material2, material3, material4);\n    this.mesh = new THREE.Group();\n\n    for (let i = 0; i < materials.length; i++) {\n      let material = materials[i];\n      let geometry = this.generateGeometry(this.num);\n      let points = new THREE.Points(geometry, material);\n\n      this.mesh.add(points);\n    }\n    if (autoRotate) {\n      this.animate();\n    }\n  }\n  generateGeometry(num = 300) {\n    const vertices = [];\n    // 创建点位置\n    for (let i = 0; i < num; i++) {\n      // 随机设置精灵的位置\n      let randomX = (Math.random() - 0.5) * 2 * this.scale;\n      let randomY = Math.random() * (this.height / 2) + this.height;\n      let randomZ = (Math.random() - 0.5) * 2 * this.scale;\n      vertices.push(randomX, randomY, randomZ);\n    }\n    const geometry = new THREE.BufferGeometry();\n    geometry.setAttribute(\n      \"position\",\n      new THREE.Float32BufferAttribute(vertices, 3)\n    );\n    return geometry;\n  }\n  animate() {\n    let i = 1;\n    this.mesh.traverse((item) => {\n      let speed = 40 * i;\n\n      if (item instanceof THREE.Points) {\n        // console.log(speed);\n        gsap.to(item.rotation, {\n          duration: speed,\n          repeat: -1,\n          y: Math.PI * 2,\n        });\n      }\n      i++;\n    });\n  }\n}\n","import * as THREE from \"three\";\nimport gsap from \"gsap\";\nimport { Water } from \"three/examples/jsm/objects/Water.js\";\n\nexport default class Ocean {\n  constructor(radius = 50) {\n    this.clock = new THREE.Clock(); // 创建一个计时器\n    // 创建水平\n    const TextureLoader = new THREE.TextureLoader();\n    this.waterGeometry = new THREE.CircleGeometry(radius, 32);\n    this.water = new Water(this.waterGeometry, {\n      textureWidth: 512,\n      textureHeight: 512,\n      \n      waterNormals: new THREE.TextureLoader().load( './textures/waternormals.jpg', function ( texture ) {\n\n        texture.wrapS = texture.wrapT = THREE.RepeatWrapping;\n\n      } ),\n      alpha: 1.0,\n\n      \n      //flowDirection: new THREE.Vector2(1, 1),\n      //scale: 100,\n      distortionScale: 7,\n      sunColor: 0xffffff,\n\t\t\t\t\t\twaterColor: 0x001e0f,\n    });\n    this.water.position.y = 0;\n    this.water.rotation.x = -Math.PI / 2;\n    this.mesh = this.water;\n    this.water.renderOrder = -1;\n    \n\n  \n  }\n \n  animate() {\n\n    requestAnimationFrame(this.animate.bind(this));\n    this.render();\n\n  }\n\n  render() {\n    const delta = this.clock.getDelta(); // 获取时间差\n    this.water.material.uniforms[\"time\"].value += delta*1.5; // 更新时间属性\n\n    // 示例：假设存在sphere和renderer等对象\n    // sphere.position.y = Math.sin(performance.now() * 0.001) * 20 + 5;\n    // sphere.rotation.x = performance.now() * 0.001 * 0.5;\n    // sphere.rotation.z = performance.now() * 0.001 * 0.51;\n    // renderer.render(scene, camera);\n  }\n  }\n  \n\n","import * as THREE from 'three'\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js'\r\n\r\n\r\n\r\n\r\n \r\n  const BLADE_WIDTH = 0.1\r\n  const BLADE_HEIGHT = 0.3\r\n  const BLADE_HEIGHT_VARIATION = 0.5\r\n  const BLADE_VERTEX_COUNT = 5\r\n  const BLADE_TIP_OFFSET = 0.1\r\n  \r\n  function interpolate(val, oldMin, oldMax, newMin, newMax) {\r\n    return ((val - oldMin) * (newMax - newMin)) / (oldMax - oldMin) + newMin\r\n  }\r\n  \r\n   export class GrassGeometry extends THREE.BufferGeometry {\r\n    constructor(size, count) {\r\n      super()\r\n  \r\n      const positions = []\r\n      const uvs = []\r\n      const indices = []\r\n  \r\n      for (let i = 0; i < count; i++) {\r\n        const surfaceMin = (size / 2) * -1\r\n        const surfaceMax = size / 2\r\n        const radius = (size / 2) * Math.random()\r\n        const theta = Math.random() * 2 * Math.PI\r\n  \r\n        const x = radius * Math.cos(theta)\r\n        const y = radius * Math.sin(theta)\r\n  \r\n        uvs.push(\r\n          ...Array.from({ length: BLADE_VERTEX_COUNT }).flatMap(() => [\r\n            interpolate(x, surfaceMin, surfaceMax, 0, 1),\r\n            interpolate(y, surfaceMin, surfaceMax, 0, 1)\r\n          ])\r\n        )\r\n  \r\n        const blade = this.computeBlade([x, 0, y], i)\r\n        positions.push(...blade.positions)\r\n        indices.push(...blade.indices)\r\n      }\r\n  \r\n      this.setAttribute(\r\n        'position',\r\n        new THREE.BufferAttribute(new Float32Array(positions), 3)\r\n      )\r\n      this.setAttribute('uv', new THREE.BufferAttribute(new Float32Array(uvs), 2))\r\n      this.setIndex(indices)\r\n      this.computeVertexNormals()\r\n    }\r\n  \r\n    // Grass blade generation, covered in https://smythdesign.com/blog/stylized-grass-webgl\r\n    // TODO: reduce vertex count, optimize & possibly move to GPU\r\n    computeBlade(center, index = 0) {\r\n      const height = BLADE_HEIGHT + Math.random() * BLADE_HEIGHT_VARIATION\r\n      const vIndex = index * BLADE_VERTEX_COUNT\r\n  \r\n      // Randomize blade orientation and tip angle\r\n      const yaw = Math.random() * Math.PI * 2\r\n      const yawVec = [Math.sin(yaw), 0, -Math.cos(yaw)]\r\n      const bend = Math.random() * Math.PI * 2\r\n      const bendVec = [Math.sin(bend), 0, -Math.cos(bend)]\r\n  \r\n      // Calc bottom, middle, and tip vertices\r\n      const bl = yawVec.map((n, i) => n * (BLADE_WIDTH / 2) * 1 + center[i])\r\n      const br = yawVec.map((n, i) => n * (BLADE_WIDTH / 2) * -1 + center[i])\r\n      const tl = yawVec.map((n, i) => n * (BLADE_WIDTH / 4) * 1 + center[i])\r\n      const tr = yawVec.map((n, i) => n * (BLADE_WIDTH / 4) * -1 + center[i])\r\n      const tc = bendVec.map((n, i) => n * BLADE_TIP_OFFSET + center[i])\r\n  \r\n      // Attenuate height\r\n      tl[1] += height / 2\r\n      tr[1] += height / 2\r\n      tc[1] += height\r\n  \r\n      return {\r\n        positions: [...bl, ...br, ...tr, ...tl, ...tc],\r\n        indices: [\r\n          vIndex,\r\n          vIndex + 1,\r\n          vIndex + 2,\r\n          vIndex + 2,\r\n          vIndex + 4,\r\n          vIndex + 3,\r\n          vIndex + 3,\r\n          vIndex,\r\n          vIndex + 2\r\n        ]\r\n      }\r\n    }\r\n  }\r\n  \r\n  \r\nconst cloudTexture = new THREE.TextureLoader().load(`https://z2586300277.github.io/3d-file-server/` + 'threeExamples/shader/cloud.jpg')\r\ncloudTexture.wrapS = cloudTexture.wrapT = THREE.RepeatWrapping\r\n\r\n  \r\nexport  class Grass extends THREE.Mesh {\r\n    constructor(size, count) {\r\n      const geometry = new GrassGeometry(size, count)\r\n      const material = new THREE.ShaderMaterial({\r\n        uniforms: {\r\n          uCloud: { value: cloudTexture },\r\n          offsetX: { value: 0.5 },\r\n          offsetY: { value: 0.3 },\r\n          uTime: { value: 0 },\r\n        },\r\n        side: THREE.DoubleSide,\r\n        vertexShader:`  uniform float uTime;\r\n        uniform float offsetX;\r\n        uniform float offsetY;\r\n      \r\n        varying vec3 vPosition;\r\n        varying vec2 vUv;\r\n        varying vec3 vNormal;\r\n      \r\n        float wave(float waveSize, float tipDistance, float centerDistance) {\r\n          // Tip is the fifth vertex drawn per blade\r\n          bool isTip = (gl_VertexID + 1) % 5 == 0;\r\n      \r\n          float waveDistance = isTip ? tipDistance : centerDistance;\r\n          return sin((uTime / 500.0) + waveSize) * waveDistance;\r\n        }\r\n      \r\n        void main() {\r\n          vPosition = position;\r\n          vUv = uv;\r\n          \r\n          // Cloud shadow move\r\n          vUv.x += uTime * 0.0001 * offsetX;\r\n          vUv.y += uTime * 0.0001 * offsetY;\r\n      \r\n          vNormal = normalize(normalMatrix * normal);\r\n          if (vPosition.y < 0.0) {\r\n            vPosition.y = 0.0;\r\n          } else {\r\n            vPosition.x += wave(uv.x * 10.0, 0.3, 0.1);      \r\n          }\r\n          gl_Position = projectionMatrix * modelViewMatrix * vec4(vPosition, 1.0);\r\n        }`,\r\n        fragmentShader:`  uniform sampler2D uCloud;\r\n        uniform float uTime;\r\n        varying vec3 vPosition;\r\n        varying vec2 vUv;\r\n        varying vec3 vNormal;\r\n      \r\n        vec3 green = vec3(0.2, 0.6, 0.3);\r\n      \r\n        void main() {\r\n          vec3 color = mix(green * 0.7, green, vPosition.y);\r\n          color = mix(color, texture2D(uCloud, vUv).rgb, 0.4);\r\n          float lighting = normalize(dot(vNormal, vec3(10)));\r\n          gl_FragColor = vec4(color + lighting * 0.03, 1.0);\r\n        }`,\r\n      })\r\n      super(geometry, material)\r\n      const floor = new THREE.Mesh(\r\n        new THREE.CircleGeometry(size / 2, 8).rotateX(Math.PI / 2),\r\n        material\r\n      )\r\n      floor.position.y = -Number.EPSILON\r\n      this.add(floor)\r\n  \r\n    }\r\n    update(time) {\r\n      this.material.uniforms.uTime.value = time\r\n    }\r\n  }\r\n  \r\n\r\n  \r\n\r\n\r\n\r\n","import { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\nimport * as THREE from \"three\";\nimport scene from \"../scene\";\nimport modifyCityMaterial from \"../modify/modifyCityMaterial\";\nimport FlyLine from \"./FlyLine\";\nimport FlyLineShader from \"./FlyLineShader\";\nimport MeshLine from \"./MeshLine\";\nimport LightWall from \"./LightWall\";\nimport LightRadar from \"./LightRadar\";\nimport AlarmSprite from \"./AlarmSprite\";\nimport { DRACOLoader } from \"three/examples/jsm/loaders/DRACOLoader\";\nimport { Clouds, CloudsPlus } from \"./Clouds\";\nimport Ocean from \"./Ocean\";\nimport {Grass} from \"./caodi\";\nexport default function createCity() {\n  const gltfLoader = new GLTFLoader();\n  const dracoLoader = new DRACOLoader();\n    dracoLoader.setDecoderPath(\"./draco/\");\n    dracoLoader.setDecoderConfig({ type: \"js\" });\n    dracoLoader.preload();\n    gltfLoader.setDRACOLoader(dracoLoader);\n  gltfLoader.load(\"./model/city.glb\",  (gltf)=> {\n    console.log(gltf);\n\n       gltf.scene.traverse((item)=>{\n      console.log(item);\n      if(item.type === \"Mesh\"){\n        const cityMaterial = new THREE.MeshBasicMaterial({\n          color: new THREE.Color(0x00FFFF),\n        });\n        item.material = cityMaterial;\n        modifyCityMaterial(item);\n        if(item.name == \"Layerbuildings\"){\n          const meshLine = new MeshLine(item.geometry);\n          const size = item.scale.x;\n          meshLine.mesh.scale.set(size,size,size);\n          scene.add(meshLine.mesh);\n        }\n      }\n\n    }\n   );\n      scene.add(gltf.scene);\n     \n\n   \n      // const flyLine = new FlyLine();\n      // scene.add(flyLine.mesh);\n      const addClouds = new Clouds();\n      scene.add(addClouds.mesh);\n      const addCloudsPlus = new CloudsPlus();\n      scene.add(addCloudsPlus.mesh);\n\n      const ocean = new Ocean();\n      scene.add(ocean.mesh);\n      ocean.animate();\n    // 添加着色器飞线\n      const flyLineShader = new FlyLineShader();\n      scene.add(flyLineShader.mesh);\n  \n      // //添加光墙\n      // const lightWall = new LightWall();\n      // scene.add(lightWall.mesh);\n      //添加雷达\n      const lightRadar = new LightRadar();\n      scene.add(lightRadar.mesh);\n  \n      let grass = null\n      grass = new Grass(50, 100000);\n      scene.add(grass);\n      //添加警示标识\n      // const alarmSprite = new AlarmSprite();\n      // scene.add(alarmSprite.mesh);\n      // alarmSprite.onClick(function (e){\n      //   console.log(\"警告\",e);\n      // });\n      // 初始化渲染器\\\n      // 创建透视相机\nconst camera = new THREE.PerspectiveCamera(\n  75,\n  window.innerHeight / window.innerHeight,\n  1,\n  50000\n);\nconst renderer = new THREE.WebGLRenderer({\n  // 抗锯齿\n  antialias: true,\n  // logarithmicDepthBuffer: true,\n});\n// 设置渲染尺寸大小\nrenderer.setSize(window.innerWidth, window.innerHeight);\nrenderer.shadowMap.enabled = true;\n\nanimate()\nfunction animate(time) {\n   if(grass) grass.update(time);\n    requestAnimationFrame(animate)\n    renderer.render(scene, camera)\n}\n  });\n\n\n}\n  \n","import { RGBELoader } from \"three/examples/jsm/loaders/RGBELoader.js\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\nimport * as THREE from \"three\";\nimport scene from \"./scene\";\nimport gsap from \"gsap\";\nimport createCity from \"./mesh/City\";\n\nexport default function createMesh() {\n  createCity();\n}\n","import * as THREE from \"three\";\nimport camera from \"./camera\";\nimport renderer from \"./renderer\";\nimport controls from \"./controls\";\nimport scene from \"./scene\";\nimport sun from \"./mesh/sun\";\nconst clock = new THREE.Clock();\nfunction animate(t) {\n  controls.update();\n\n  \n  const time = clock.getElapsedTime();\n  requestAnimationFrame(animate);\n  // 使用渲染器渲染相机看这个场景的内容渲染出来\n  renderer.render(scene, camera);\n}\n\nexport default animate;\n","// src/utils/SkyController.js\nimport * as THREE from 'three';\nimport { Sky } from 'three/examples/jsm/objects/Sky.js';\n\nexport default class SkyController {\n  constructor(scene, camera, renderer) {\n    this.scene = scene;\n    this.camera = camera;\n    this.renderer = renderer;\n    this.sun = new THREE.Vector3();\n    \n    // 初始化天空\n    this.sky = new Sky();\n    this.sky.scale.setScalar(450000);\n    this.scene.add(this.sky);\n    \n    // 初始化 uniforms\n    this.effectController = {\n      turbidity: 16,\n      rayleigh: 6,\n      mieCoefficient: 0.009,\n      mieDirectionalG: 0.8,\n      luminance: 9,\n      inclination: 0.49,  // 地平线上的太阳角度\n      azimuth: 0.45,     // 方位角\n      sun: !true          // 如果是 true，禁用太阳效果\n    };\n    \n    this.initSky();\n  }\n\n  initSky() {\n    this.updateSky();\n  }\n\n  updateSky() {\n    const uniforms = this.sky.material.uniforms;\n    uniforms['turbidity'].value = this.effectController.turbidity;\n    uniforms['rayleigh'].value = this.effectController.rayleigh;\n    uniforms['mieCoefficient'].value = this.effectController.mieCoefficient;\n    uniforms['mieDirectionalG'].value = this.effectController.mieDirectionalG;\n    //uniforms['luminance'].value = this.effectController.luminance;\n\n    // 更新太阳位置\n    const theta = Math.PI * (this.effectController.inclination - 0.5);\n    const phi = 2 * Math.PI * (this.effectController.azimuth - 0.5);\n\n    this.sun.x = Math.cos(phi);\n    this.sun.y = Math.sin(phi) * Math.sin(theta);\n    this.sun.z = Math.sin(phi) * Math.cos(theta);\n\n    uniforms['sunPosition'].value.copy(this.sun);\n    this.renderer.render(this.scene, this.camera);\n  }\n\n  // 允许外部通过此方法更新参数\n  setParameters(params) {\n    this.effectController = { ...this.effectController, ...params };\n    this.updateSky();\n  }\n\n  animate() {\n    requestAnimationFrame(this.animate.bind(this));\n    this.updateSky();\n  }\n}\n","<template>\n  <div class=\"scene\" ref=\"sceneDiv\"></div>\n</template>\n\n<script setup>\nimport { onMounted, ref, watch } from \"vue\";\nimport * as THREE from \"three\";\nimport gsap from \"gsap\";\n\n// 导入gui对象\nimport gui from \"@/three/gui\";\n// 导入场景\nimport scene from \"@/three/scene\";\n// 导入相机\nimport camera from \"@/three/camera\";\n// 导入控制器\nimport controls from \"@/three/controls\";\n// 导入辅助坐标轴\nimport axesHelper from \"@/three/axesHelper\";\n// 导入渲染器\nimport renderer from \"@/three/renderer\";\n// 初始化调整屏幕\nimport \"@/three/init\";\n// 导入添加物体函数\nimport createMesh from \"@/three/createMesh\";\n// 导入每一帧的执行函数\nimport animate from \"@/three/animate\";\nimport  AlarmSprite from \"@/three/mesh/AlarmSprite\";\nimport LightWall from \"@/three/mesh/LightWall\";\nimport FlyLineShader from \"@/three/mesh/FlyLineShader\";\nimport LightRadar from \"@/three/mesh/LightRadar\";\nimport Sun from \"@/three/mesh/sun\";\nimport sky from \"@/three/mesh/sky\";\nimport eventHub from \"@/utils/eventHub\";\nconst props = defineProps([\"eventList\"]);\n// 场景元素div\nlet sceneDiv = ref(null);\n// 添加相机\nscene.add(camera);\n// 添加辅助坐标轴\nscene.add(axesHelper);\n\nconst skyController = new sky(scene, camera, renderer);\nscene.add(skyController.sky);\n// 创建太阳实例并添加到场景中\n// const sun = new Sun({ x: 0, y: 0, z: 0 });\n// scene.add(sun.scene);\n\n// scene.add(sun.scene);\n// 创建物体\n\n\nconst clock = new THREE.Clock();\nanimate();\ncreateMesh();\nconst eventListMesh = [];\nlet mapFn = {\n  火警: (position, i) => {\n    const lightWall = new LightWall(1, 2, position);\n    lightWall.eventListIndex = i;\n    scene.add(lightWall.mesh);\n    eventListMesh.push(lightWall);\n  },\n  治安: (position, i) => {\n    //   生成随机颜色\n    const color = new THREE.Color(\n      Math.random(),\n      Math.random(),\n      Math.random()\n    ).getHex();\n    // 添加着色器飞线\n    const flyLineShader = new FlyLineShader(position, color);\n    flyLineShader.eventListIndex = i;\n    scene.add(flyLineShader.mesh);\n    eventListMesh.push(flyLineShader);\n  },\n  \n  电力: (position, i) => {\n    // 添加雷达\n    const lightRadar = new LightRadar(2, position);\n    lightRadar.eventListIndex = i;\n    scene.add(lightRadar.mesh);\n    eventListMesh.push(lightRadar);\n  },\n\n};\neventHub.on(\"toggleEvent\",(i)=>{\n  eventListMesh.forEach((item)=>{\n    if(item.eventListIndex === i){\n       item.mesh.visible=true; \n    }else{\n        item.mesh.visible=false;\n    }\n   \n  });\n  const position = {\n    x:props.eventList[i].position.x/5-10,\n    y:0,\n    z:props.eventList[i].position.y/5-10,\n};\n  controls.target.set(position.x,position.y,position.z);\n});\nwatch(\n  ()=>props.eventList,\n  (val)=>{\n    //console.log(val);\n    eventListMesh.forEach((item) => {\n      item.remove();\n    });\n    props.eventList.forEach((item,i)=>{\n      const position ={\n        x:item.position.x/5-10,\n        z:item.position.y/5-10,\n      } ;\n      const alarmSprite = new AlarmSprite(item.name,position);\n      alarmSprite.onClick(()=>{\n        //console.log(item.name,i);\n        eventHub.emit(\"spriteClik\",{event:item,i});\n\n      });\n      alarmSprite.eventListIndex=i;\n      eventListMesh.push(alarmSprite);\n      scene.add(alarmSprite.mesh);\n      console.log(item);\n      if (mapFn[item.name]) {\n        mapFn[item.name](position, i);\n      }\n    });\n  }\n);\n\nonMounted(() => {\n  sceneDiv.value.appendChild(renderer.domElement);\n  animate();\n});\n\n\n\n\n\n</script>\n\n<style >\n.scene {\n  width: 100vw;\n  height: 100vh;\n  position: fixed;\n  z-index: 100;\n  left: 0;\n  top: 0;\n}\n\n</style>","import script from \"./Scene.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Scene.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Scene.vue?vue&type=style&index=0&id=2c3f7122&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"home\">\n <Scene :eventList=\"eventList\"></Scene>\n <BigScreen :dataInfo=\"dataInfo\" :eventList=\"eventList\"></BigScreen>\n  </div>\n</template>\n\n<script setup>\n// @ is an alias to /src\nimport { getSmartCityInfo, getSmartCityList } from \"@/api/api\";\nimport BigScreen from '@/components/BigScreen.vue';\nimport Scene from '@/components/Scene.vue'\n\nimport gsap from 'gsap';\n\nimport { onMounted, reactive, ref,watch } from \"vue\";\nconst dataInfo = reactive({\n    iot:{number:0},\n    event:{number:0},\n    power:{number:0},\n    test:{number:0},\n\n});\nonMounted(async ()=>{\n  changeInfo();\n  getEventList();\n  setInterval(()=>{\n    changeInfo();\n    getEventList();\n  },5000);\n});\nconst changeInfo=async ()=>{\n  let res = await getSmartCityInfo();\n  // dataInfo.iot = res.data.data.iot; \n  // dataInfo.event = res.data.data.event;\n  // dataInfo.power = res.data.data.power;\n  // dataInfo.test = res.data.data.test;\n  // dataInfo.iot={name:res.data.data.iot.name,unit:res.data.data.iot.unit};\n  // gsap.to(dataInfo.iot,{\n  //   number:res.data.data.iot.number,\n  //   duration:1,\n  // });\n  // gsap.to(dataInfo.event,{\n  //   number:res.data.data.event.number,\n  //   duration:1,\n  // });\n  // gsap.to(dataInfo.power,{\n  //   number:res.data.data.power.number,\n  //   duration:1,\n  // });\n  // gsap.to(dataInfo.test,{\n  //   number:res.data.data.test.number,\n  //   duration:1,\n  // });\n  for (let key in dataInfo) {\n    dataInfo[key].name = res.data.data[key].name;\n    dataInfo[key].unit = res.data.data[key].unit;\n    gsap.to(dataInfo[key], {\n      number: res.data.data[key].number,\n      duration: 1,\n\n      \n    });\n  }\n};\nconst eventList = ref([]);\nconst getEventList = async () => {\n  let result = await getSmartCityList();\n  eventList.value = result.data.list;\n   console.log(result.data.list);\n};\n</script>\n","import script from \"./HomeView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./HomeView.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { createRouter, createWebHistory } from 'vue-router'\nimport HomeView from '../views/HomeView.vue'\n\nconst routes = [\n  {\n    path: '/',\n    name: 'home',\n    component: HomeView\n  },\n]\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n})\n\nexport default router\n","import { createStore } from 'vuex'\n\nexport default createStore({\n  state: {\n  },\n  getters: {\n  },\n  mutations: {\n  },\n  actions: {\n  },\n  modules: {\n  }\n})\n","import { createApp } from 'vue'\nimport App from './App.vue'\nimport router from './router'\nimport store from './store'\n\ncreateApp(App).use(store).use(router).mount('#app')\n","module.exports = \"varying float vSize;\\nuniform vec3 uColor;\\nvoid main(){\\n     float distanceToCenter = distance(gl_PointCoord,vec2(0.5,0.5));\\n     float strength = 1.0 - (distanceToCenter*2.0);\\n\\n    if(vSize<=0.0){\\n        gl_FragColor = vec4(1,0,0,0);\\n    }else{\\n        gl_FragColor = vec4(uColor,strength);\\n    }\\n    //gl_FragColor = vec4(0.1333, 0.6667, 0.1059, 1.0);\\n}\"","module.exports = \"attribute float aSize;\\n\\nuniform float uTime;\\nuniform vec3 uColor;\\nuniform float uLength;\\n\\nvarying float vSize;\\n\\nvoid main(){\\n    vec4 viewPosition = viewMatrix * modelMatrix *vec4(position,1);\\n    gl_Position = projectionMatrix * viewPosition;\\n    vSize = (aSize-uTime);\\n    if(vSize<0.0){\\n        vSize = vSize + uLength; \\n    }\\n     vSize = (vSize-500.0)*0.2;\\n    \\n     gl_PointSize = -vSize/viewPosition.z;\\n    vSize = aSize;\\n    \\n\\n\\n    //gl_PointSize = vSize;\\n}\"","module.exports = \"varying vec3 vPosition;\\nvarying vec2 vUv;\\nuniform vec3 uColor;\\nuniform float uTime;\\n\\nmat2 rotate2d(float _angle){\\n    return mat2(cos(_angle),-sin(_angle),\\n                sin(_angle),cos(_angle));\\n}\\n\\n\\nvoid main(){\\n    \\n    vec2 newUv = rotate2d(uTime*6.28) * (vUv-0.5);\\n    newUv += 0.5;\\n    float alpha =  1.0 - step(0.5,distance(newUv,vec2(0.5)));\\n    \\n    float angle = atan(newUv.x-0.5,newUv.y-0.5);\\n    float strength = (angle+3.14)/6.28;\\n    gl_FragColor =vec4(uColor,alpha*strength);\\n\\n    \\n    \\n}\"","module.exports = \"varying vec3 vPosition;\\nvarying vec2 vUv;\\n\\nvoid main(){\\n    vec4 viewPosition = viewMatrix * modelMatrix *vec4(position,1);\\n    gl_Position = projectionMatrix * viewPosition;\\n    vPosition = position;\\n    vUv = uv;\\n    \\n}\"","module.exports = \"varying vec3 vPosition;\\nuniform float uHeight;\\nvoid main(){\\n    // 设置混合的百分比\\n        float gradMix = (vPosition.y+uHeight/2.0)/uHeight;\\n      gl_FragColor = vec4(1,1,0,1.0-gradMix);\\n    \\n}\"","module.exports = \"varying vec3 vPosition;\\n\\nvoid main(){\\n    vec4 viewPosition = viewMatrix * modelMatrix *vec4(position,1);\\n    gl_Position = projectionMatrix * viewPosition;\\n    vPosition = position;\\n    \\n}\"","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkcity\"] = self[\"webpackChunkcity\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(780); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_createBlock","_component_router_view","script","__exports__","render","getSmartCityInfo","axios","get","getSmartCityList","eventHub","Mitt","props","__props","imgs","require","toFixInt","num","parseInt","toFixed","currentActive","ref","on","data","console","log","value","i","toggleEvent","emit","dat","scene","THREE","camera","window","innerHeight","position","set","renderer","antialias","setSize","innerWidth","shadowMap","enabled","controls","OrbitControls","domElement","enableDamping","axesHelper","aspect","updateProjectionMatrix","addEventListener","setPixelRatio","devicePixelRatio","modifyCityMaterial","mesh","material","onBeforeCompile","shader","fragmentShader","replace","addGradColor","addSpread","addLightLine","addToTopLine","geometry","computeBoundingBox","min","max","boundingBox","uHeight","y","uniforms","uTopColor","vertexShader","center","uSpreadCenter","uSpreadTime","uSpreadWidth","gsap","to","duration","ease","repeat","uLightLineTime","uLightLineWidth","uToTopTime","uToTopWidth","FlyLineShader","constructor","x","z","Color","FlyLinePoints","this","lineCurve","points","getPoints","setFromPoints","aSizeArray","Float32Array","length","setAttribute","shaderMaterial","vertex","fragment","transparent","blending","uTime","uColor","uLength","uSize","remove","removeFromParent","dispose","MeshLine","edges","color","line","LightWall","radius","side","scale","yoyo","LightRadar","rotation","Math","PI","AlarmSprite","type","TextureLoader","typeObj","map","load","fns","raycaster","mouse","event","clientX","clientY","setFromCamera","alarm","intersects","intersectObject","forEach","fn","onClick","push","Clouds","height","size","autoRotate","textureLoader","map1","map2","map3","material1","alphaMap","depthWrite","depthTest","material2","material3","materials","index","floor","random","sprite","randomSize","randomX","randomY","randomZ","add","animate","CloudsPlus","material4","generateGeometry","vertices","traverse","item","speed","Ocean","clock","waterGeometry","water","Water","textureWidth","textureHeight","waterNormals","texture","wrapS","wrapT","alpha","distortionScale","sunColor","waterColor","renderOrder","requestAnimationFrame","bind","delta","getDelta","BLADE_WIDTH","BLADE_HEIGHT","BLADE_HEIGHT_VARIATION","BLADE_VERTEX_COUNT","BLADE_TIP_OFFSET","interpolate","val","oldMin","oldMax","newMin","newMax","GrassGeometry","count","super","positions","uvs","indices","surfaceMin","surfaceMax","theta","cos","sin","Array","from","flatMap","blade","computeBlade","setIndex","computeVertexNormals","vIndex","yaw","yawVec","bend","bendVec","bl","n","br","tl","tr","tc","cloudTexture","Grass","uCloud","offsetX","offsetY","rotateX","Number","EPSILON","update","time","createCity","gltfLoader","GLTFLoader","dracoLoader","DRACOLoader","setDecoderPath","setDecoderConfig","preload","setDRACOLoader","gltf","cityMaterial","name","meshLine","addClouds","addCloudsPlus","ocean","flyLineShader","lightRadar","grass","createMesh","t","getElapsedTime","SkyController","sun","sky","Sky","setScalar","effectController","turbidity","rayleigh","mieCoefficient","mieDirectionalG","luminance","inclination","azimuth","initSky","updateSky","phi","copy","setParameters","params","sceneDiv","skyController","eventListMesh","mapFn","火警","lightWall","eventListIndex","治安","getHex","电力","visible","eventList","target","watch","alarmSprite","onMounted","appendChild","dataInfo","reactive","iot","number","power","test","async","changeInfo","getEventList","setInterval","res","key","unit","result","list","routes","path","component","HomeView","router","createRouter","history","createWebHistory","process","createStore","state","getters","mutations","actions","modules","createApp","App","use","store","mount","module","exports","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","call","m","deferred","O","chunkIds","priority","notFulfilled","Infinity","fulfilled","j","Object","keys","every","splice","r","getter","__esModule","d","a","definition","o","defineProperty","enumerable","g","globalThis","Function","e","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","id","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}